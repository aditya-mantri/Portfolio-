{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Downloads\\\\portfolio\\\\front-end\\\\src\\\\Containers\\\\Terminal\\\\Terminal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment, useEffect, forwardRef, useImperativeHandle } from 'react';\nimport './Terminal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Terminal = /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const [getTerLine, setTerLine] = useState({\n    Timer: 33,\n    Value: \"aditya@d:~$ ▮\",\n    blink: true\n  });\n  useImperativeHandle(ref, () => ({\n    sendCommand(command) {\n      if (getTerLine.Timer >= 0) {\n        setCountDown();\n        clearTimeout(timeout);\n      }\n\n      clearTimeout(timeoutID);\n      getTerLine.Value = \"aditya@d:~$ \" + command;\n      updateContent();\n    }\n\n  }));\n\n  const N = () => {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 39\n      }, this), \"\\u2800\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 29\n    }, this);\n  };\n\n  const starterArr = [/*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Aditya M.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: [\"My portfolio\", N()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n    children: \"Linux Terminal Inspired\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), \"To Use the Portfolio Either \", /*#__PURE__*/_jsxDEV(\"u\", {\n      className: \"attention\",\n      children: \"Use the Navigation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 46\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Or \", /*#__PURE__*/_jsxDEV(\"u\", {\n      className: \"attention\",\n      children: \"Explore the Terminal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this), N()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"To Begin, Type:\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"indented\",\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"I\",\n      children: \"[1]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 34\n    }, this), \" or \", /*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"I\",\n      children: \"[open aboutMe]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 62\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"indented\",\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"I\",\n      children: \"[2]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 34\n    }, this), \" or \", /*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"I\",\n      children: \"[open experience]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 62\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"indented\",\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"I\",\n      children: \"[3]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 34\n    }, this), \" or \", /*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"I\",\n      children: \"[open work]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 62\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"indented\",\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"I\",\n      children: \"[4]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 34\n    }, this), \" or \", /*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"I\",\n      children: \"[open contactMe]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 62\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 10\n  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this)];\n  let [content, setContent] = useState({\n    arr: starterArr\n  });\n  useEffect(() => {\n    let element = document.getElementById(\"command-line\");\n\n    if (element !== null) {\n      element.scrollIntoView();\n    }\n  }, [content.arr]);\n\n  const setCountDown = num => {\n    clearTimeout(timeoutID);\n    let tempArr = [...content.arr];\n\n    if (num === undefined) {\n      tempArr[10] = /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 28\n      }, this);\n    } else tempArr[10] = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"No User Input Detected Opening About Me Page in \", num, \" Seconds ...\", N()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 28\n    }, this);\n\n    setContent({\n      arr: tempArr\n    });\n  };\n\n  let [timeout, setT] = useState();\n  useEffect(() => {\n    clearTimeout(timeoutID);\n    setT(setTimeout(() => {\n      setCountDown();\n      clearTimeout(timeoutID);\n      getTerLine.Value = \"aditya@d:~$ 1\";\n      updateContent();\n    }, getTerLine.Timer * 1000));\n  }, []);\n\n  const updateTerminalLine = e => {\n    clearTimeout(timeoutID);\n\n    if (getTerLine.Timer >= 0) {\n      setCountDown();\n      clearTimeout(timeout);\n    }\n\n    setTerLine({\n      Value: \"aditya@d:~$ \" + parseString(e.target.value),\n      blink: true\n    });\n  };\n\n  const updateContent = e => {\n    if (e !== undefined) e.preventDefault();\n    clearTimeout(timeoutID);\n    parseCommand(parseString());\n    setTerLine({\n      Value: \"aditya@d:~$ \",\n      blink: true\n    });\n  };\n\n  const parseString = input => {\n    let bufferIndex = 19;\n    if (input !== undefined) return input.substring(bufferIndex).replaceAll(\"▮\", \"\");else return getTerLine.Value.substring(bufferIndex).replaceAll(\"▮\", \"\");\n  };\n\n  let timeoutID = setTimeout(() => {\n    if (props.inView === true) {\n      if (getTerLine.Timer === undefined) {\n        if (getTerLine.blink) setTerLine({\n          Value: (getTerLine.Value + \"\").replaceAll(\"▮\", \"\"),\n          blink: !getTerLine.blink\n        });else setTerLine({\n          Value: getTerLine.Value + \"▮\",\n          blink: !getTerLine.blink\n        });\n      } else {\n        getTerLine.Timer -= 1;\n\n        if (getTerLine.blink) {\n          getTerLine.Value = (getTerLine.Value + \"\").replaceAll(\"▮\", \"\");\n          getTerLine.blink = !getTerLine.blink;\n        } else {\n          getTerLine.Value = getTerLine.Value + \"▮\";\n          getTerLine.blink = !getTerLine.blink;\n        }\n\n        setCountDown(getTerLine.Timer);\n\n        if (getTerLine.Timer === 0) {\n          setCountDown();\n        }\n      }\n    }\n  }, getTerLine.Timer === undefined ? 800 : 1000);\n  props.setTimeoutId(timeoutID);\n  let key = 0;\n\n  const allTerminalText = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"css-typing \",\n    children: content.arr.map(item => {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: item\n      }, key++, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 9\n  }, this);\n\n  let element = document.getElementById(\"command-line\");\n\n  if (element !== null && props.inView === true) {\n    if (element !== document.activeElement) element.focus();\n  }\n\n  const parseCommand = command => {\n    clearTimeout(timeoutID);\n    let commandSelector = command.split(\" \");\n    let tempArr = [...content.arr];\n    tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"aditya@d:~$ \", parseString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 22\n    }, this));\n\n    switch (commandSelector[0]) {\n      case \"\":\n        {\n          tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"aditya@d:~$ \", parseString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 30\n          }, this));\n          break;\n        }\n\n      case \"clear\":\n        {\n          if (commandSelector.length <= 1) {\n            starterArr[10] = /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 39\n            }, this);\n            setContent({\n              arr: starterArr\n            });\n            return null;\n          } else {\n            tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"aditya@d:~$ \", parseString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 34\n            }, this));\n            tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Unknown Argument: \", commandSelector[1], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 75\n              }, this), \"\\u2800\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 34\n            }, this));\n          }\n\n          break;\n        }\n\n      case \"help\":\n        {\n          if (commandSelector.length <= 1) {\n            tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"indented\",\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                className: \"I\",\n                children: \"[clear]\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 59\n              }, this), \": clears command window\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 34\n            }, this));\n            tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"indented\",\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                className: \"I\",\n                children: \"[ls]\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 59\n              }, this), \": list all files\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 34\n            }, this));\n            tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"indented\",\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                className: \"I\",\n                children: \"[run argument]\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 59\n              }, this), \": run a specific program\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 34\n            }, this));\n            tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"indented\",\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                className: \"I\",\n                children: \"[close argument]\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 59\n              }, this), \": close a specific  program or file\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 34\n            }, this));\n            tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"indented\",\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                className: \"I\",\n                children: \"[open argument]\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 59\n              }, this), \": open a specific document\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 121\n              }, this), \"\\u2800\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 34\n            }, this));\n          } else {\n            tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Unknown Argument: \", commandSelector[1], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 75\n              }, this), \"\\u2800\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 34\n            }, this));\n          }\n\n          break;\n        }\n\n      case \"ls\":\n        {\n          if (commandSelector.length <= 1) {\n            tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"indented\",\n              children: \"File: aboutMe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 34\n            }, this));\n            tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"indented\",\n              children: \"File: experience\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 34\n            }, this));\n            tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"indented\",\n              children: \"File: work\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 34\n            }, this));\n          } else {\n            tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Unknown Argument: \", commandSelector[1], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 75\n              }, this), \"\\u2800\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 34\n            }, this));\n          }\n\n          break;\n        }\n\n      case \"1\":\n        {\n          getTerLine.Value = \"aditya@d:~$ open aboutMe\";\n          return parseCommand(\"open aboutMe\");\n        }\n\n      case \"2\":\n        {\n          getTerLine.Value = \"aditya@d:~$ open experience\";\n          return parseCommand(\"open experience\");\n        }\n\n      case \"3\":\n        {\n          getTerLine.Value = \"aditya@d:~$ open work\";\n          return parseCommand(\"open work\");\n        }\n\n      case \"4\":\n        {\n          getTerLine.Value = \"aditya@d:~$ run contactMe\";\n          return parseCommand(\"open contactMe\");\n        }\n\n      case \"open\":\n        {\n          if (commandSelector.length <= 1) tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Error Expected Argument open [argument]\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 76\n            }, this), \"\\u2800\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 34\n          }, this));else {\n            switch (commandSelector[1]) {\n              case \"aboutMe\":\n                {\n                  if (props.addTab(\"About\")) tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Opening File: \", commandSelector[1], \" ...\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 87\n                    }, this), \"\\u2800\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 46\n                  }, this));else tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"File \", commandSelector[1], \" is already open redirecting...\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 256,\n                      columnNumber: 105\n                    }, this), \"\\u2800\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 46\n                  }, this));\n                  break;\n                }\n\n              case \"experience\":\n                {\n                  if (props.addTab(\"Experience\")) tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Opening File: \", commandSelector[1], \" ...\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 87\n                    }, this), \"\\u2800\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 46\n                  }, this));else tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"File \", commandSelector[1], \" is already open redirecting...\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 265,\n                      columnNumber: 105\n                    }, this), \"\\u2800\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 46\n                  }, this));\n                  break;\n                }\n\n              case \"work\":\n                {\n                  if (props.addTab(\"Work\")) tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Opening File: \", commandSelector[1], \" ...\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 272,\n                      columnNumber: 87\n                    }, this), \"\\u2800\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 46\n                  }, this));else tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"File \", commandSelector[1], \" is already open redirecting...\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 274,\n                      columnNumber: 105\n                    }, this), \"\\u2800\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 46\n                  }, this));\n                  break;\n                }\n\n              case \"contactMe\":\n                {\n                  if (props.addTab(\"Contact\")) tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Opening File: \", commandSelector[1], \" ...\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 281,\n                      columnNumber: 87\n                    }, this), \"\\u2800\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 46\n                  }, this));else tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"File \", commandSelector[1], \" is already open redirecting...\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 105\n                    }, this), \"\\u2800\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 46\n                  }, this));\n                  break;\n                }\n\n              case \"terminal\":\n                {\n                  if (props.addTab(\"Terminal\")) tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Opening new \", commandSelector[1], \" tab ...\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 89\n                    }, this), \"\\u2800\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 46\n                  }, this));else tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"File \", commandSelector[1], \" is already open redirecting...\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 292,\n                      columnNumber: 105\n                    }, this), \"\\u2800\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 46\n                  }, this));\n                  break;\n                }\n\n              default:\n                {\n                  tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Couldn't Find file: \", commandSelector[1], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 85\n                    }, this), \"\\u2800\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 42\n                  }, this));\n                  break;\n                }\n            }\n          }\n          break;\n        }\n\n      case \"close\":\n        {\n          let argument = commandSelector[1];\n          if (commandSelector.length <= 1) tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Error Expected Argument close [argument]\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 77\n            }, this), \"\\u2800\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 34\n          }, this));else {\n            switch (argument) {\n              case \"aboutMe\":\n                {\n                  if (props.removeTab(\"About\")) tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"aboutMe has been closed\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 319,\n                      columnNumber: 72\n                    }, this), \"\\u2800\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 46\n                  }, this));else tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"aboutMe is not open\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 68\n                    }, this), \"\\u2800\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 46\n                  }, this));\n                  break;\n                }\n\n              case \"experience\":\n                {\n                  if (props.removeTab(\"Experience\")) tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"experience has been closed\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 75\n                    }, this), \"\\u2800\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 46\n                  }, this));else tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"experence is not open\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 329,\n                      columnNumber: 70\n                    }, this), \"\\u2800\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 46\n                  }, this));\n                  break;\n                }\n\n              case \"work\":\n                {\n                  if (props.removeTab(\"Work\")) tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"work has been closed\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 335,\n                      columnNumber: 69\n                    }, this), \"\\u2800\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 46\n                  }, this));else tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"work is not open\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 337,\n                      columnNumber: 65\n                    }, this), \"\\u2800\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 46\n                  }, this));\n                  break;\n                }\n\n              case \"contactMe\":\n                {\n                  if (props.removeTab(\"Terminal\")) tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"contactMe has been closed\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 343,\n                      columnNumber: 74\n                    }, this), \"\\u2800\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 46\n                  }, this));else tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"contactMe is not open\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 345,\n                      columnNumber: 70\n                    }, this), \"\\u2800\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 46\n                  }, this));\n                  break;\n                }\n\n              case \"terminal\":\n                {\n                  if (props.removeTab(\"Terminal\")) tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Terminal has been closed\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 351,\n                      columnNumber: 73\n                    }, this), \"\\u2800\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 46\n                  }, this));else tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"New Terminal Tab is not open\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 353,\n                      columnNumber: 77\n                    }, this), \"\\u2800\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 46\n                  }, this));\n                  break;\n                }\n\n              default:\n                {\n                  tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [argument, \" does not exist\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 358,\n                      columnNumber: 70\n                    }, this), \"\\u2800\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 42\n                  }, this));\n                }\n            }\n          }\n          break;\n        }\n\n      default:\n        tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [parseString(), \" is not a recognized command\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 30\n        }, this));\n        tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Type \\\"help\\\" for list of commands\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 65\n          }, this), \"\\u2800\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 30\n        }, this));\n        break;\n    }\n\n    setContent({\n      arr: tempArr\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.display + \" main\",\n    children: [allTerminalText, /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateContent,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"command-line\",\n        type: \"text\",\n        autoFocus: true,\n        spellCheck: \"false\",\n        autoComplete: \"off\",\n        value: getTerLine.Value,\n        onChange: updateTerminalLine\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u2800\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 380,\n    columnNumber: 9\n  }, this);\n}, \"ZJSLvenIejAcsd8dGYdTJV+dZvY=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c2 = Terminal;\nexport default Terminal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Terminal$forwardRef\");\n$RefreshReg$(_c2, \"Terminal\");","map":{"version":3,"sources":["C:/Users/PC/Downloads/portfolio/front-end/src/Containers/Terminal/Terminal.js"],"names":["React","useState","Fragment","useEffect","forwardRef","useImperativeHandle","Terminal","props","ref","getTerLine","setTerLine","Timer","Value","blink","sendCommand","command","setCountDown","clearTimeout","timeout","timeoutID","updateContent","N","starterArr","content","setContent","arr","element","document","getElementById","scrollIntoView","num","tempArr","undefined","setT","setTimeout","updateTerminalLine","e","parseString","target","value","preventDefault","parseCommand","input","bufferIndex","substring","replaceAll","inView","setTimeoutId","key","allTerminalText","map","item","activeElement","focus","commandSelector","split","push","length","addTab","argument","removeTab","display"],"mappings":"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","sourcesContent":["import React, {useState, Fragment, useEffect, forwardRef, useImperativeHandle } from 'react';\nimport './Terminal.css'\nconst Terminal = forwardRef((props, ref) => {\n    const [getTerLine,setTerLine] = useState({Timer:33,Value:\"aditya@d:~$ ▮\",blink:true});\n\n    useImperativeHandle(\n        ref,\n        () => ({\n            sendCommand(command) {\n                if(getTerLine.Timer >= 0){\n                    setCountDown();\n                    clearTimeout(timeout)\n                }\n\n\n                clearTimeout(timeoutID);\n                getTerLine.Value = \"aditya@d:~$ \" + command;\n                updateContent();\n            }\n         }),\n     )\n\n\n    const N = () =>{return (<Fragment><br/>⠀</Fragment>);}\n\n\n    const starterArr = [\n        (<h2>Aditya M.</h2>),\n        (<h3>My portfolio{N()}</h3>),\n        (<h6>Linux Terminal Inspired</h6>),\n\n        (<p><br/>To Use the Portfolio Either <u className=\"attention\">Use the Navigation</u></p>),\n        (<p>Or <u className=\"attention\">Explore the Terminal</u>{N()}</p>),\n\n        (<p>To Begin, Type:</p>),\n        (<p className=\"indented\"><b className=\"I\">[1]</b> or <b className=\"I\">[open aboutMe]</b></p>),\n        (<p className=\"indented\"><b className=\"I\">[2]</b> or <b className=\"I\">[open experience]</b></p>),\n        (<p className=\"indented\"><b className=\"I\">[3]</b> or <b className=\"I\">[open work]</b></p>),\n        (<p className=\"indented\"><b className=\"I\">[4]</b> or <b className=\"I\">[open contactMe]</b></p>),\n        <br/>\n    ]\n    let[content,setContent] = useState({\n        arr:starterArr\n    });\n    useEffect(()=>{\n        let element = document.getElementById(\"command-line\")\n        if(element !== null){\n            element.scrollIntoView();\n        }\n    },[content.arr])\n\n\n    const setCountDown = (num) =>{\n        clearTimeout(timeoutID);\n        let tempArr = [...content.arr];\n        \n        \n\n        if(num === undefined){\n            tempArr[10] = (<p></p>);\n        }\n        else\n            tempArr[10] = (<p>No User Input Detected Opening About Me Page in {num} Seconds ...{N()}</p>)\n\n        setContent({arr:tempArr});\n    }\n\n\n    let [timeout,setT] = useState();\n    useEffect(()=>{\n        clearTimeout(timeoutID);\n          setT(setTimeout(()=>{\n            setCountDown();\n            clearTimeout(timeoutID);\n            getTerLine.Value = \"aditya@d:~$ 1\";\n            updateContent();\n           \n        },getTerLine.Timer * 1000))\n    },[])\n\n\n    const updateTerminalLine = (e) =>{\n        clearTimeout(timeoutID);\n        \n        if(getTerLine.Timer >= 0){\n            setCountDown();\n            clearTimeout(timeout)\n        }\n\n\n \n        setTerLine({Value:(\"aditya@d:~$ \"  + parseString(e.target.value)),blink:true});\n    }\n\n\n    const updateContent =(e) =>{\n        if(e !== undefined)\n            e.preventDefault();\n\n        clearTimeout(timeoutID);\n\n        parseCommand(parseString());\n\n        setTerLine({Value:\"aditya@d:~$ \",blink:true});\n    }\n\n\n    const parseString = (input)=>{\n        \n        let bufferIndex = 19;\n        if(input !== undefined)\n            return input.substring(bufferIndex).replaceAll(\"▮\",\"\");\n        else\n            return getTerLine.Value.substring(bufferIndex).replaceAll(\"▮\",\"\");\n    }\n\n\n\n    let timeoutID = setTimeout(() =>{\n        if(props.inView === true){\n            if(getTerLine.Timer === undefined){\n                if(getTerLine.blink)\n                    setTerLine({Value:(getTerLine.Value + \"\").replaceAll(\"▮\",\"\"),blink:!getTerLine.blink});\n                \n                else\n                    setTerLine({Value: getTerLine.Value + (\"▮\"),blink:!getTerLine.blink});\n            }\n            else{\n                getTerLine.Timer -= 1;\n                if(getTerLine.blink){\n                    getTerLine.Value = (getTerLine.Value + \"\").replaceAll(\"▮\",\"\");\n                    getTerLine.blink = !getTerLine.blink;\n                \n                }\n                else{\n                    getTerLine.Value = getTerLine.Value + (\"▮\");\n                    getTerLine.blink = !getTerLine.blink;\n                }\n\n\n                setCountDown(getTerLine.Timer);\n\n                if(getTerLine.Timer === 0){\n                    setCountDown();\n                }\n            }\n                \n        }\n    },(getTerLine.Timer === undefined)?800:1000);\n    props.setTimeoutId(timeoutID);\n    \n\n\n    let key = 0;\n    const allTerminalText = (       \n        <div className={\"css-typing \"}>           \n            {content.arr.map((item)=>{\n                return <Fragment key={key++}>{item}</Fragment>;\n            })}\n        </div>\n    )\n\n\n    let element = document.getElementById(\"command-line\")\n    if(element !== null && props.inView === true){\n        if(element !== document.activeElement)\n            element.focus();\n    }\n\n \n    const parseCommand = (command) =>{\n        clearTimeout(timeoutID);\n\n        let commandSelector = command.split(\" \")\n\n        let tempArr = [...content.arr];\n        tempArr.push(<p>aditya@d:~$ {parseString()}</p>);\n\n        switch(commandSelector[0]){\n            case \"\":{\n                tempArr.push(<p>aditya@d:~$ {parseString()}</p>);\n                break;\n            }\n\n            case \"clear\":{\n                if(commandSelector.length <= 1){\n                    starterArr[10] = (<p></p>);\n                    setContent({arr:starterArr});\n                    return null;\n                }\n                else{\n                    tempArr.push(<p>aditya@d:~$ {parseString()}</p>);\n                    tempArr.push(<p>Unknown Argument: {commandSelector[1]}<br/>⠀</p>);\n                }\n                break;\n            }\n\n            case \"help\":{\n                if(commandSelector.length <= 1){\n                    tempArr.push(<p  className=\"indented\"><b className=\"I\">[clear]</b>: clears command window</p>);\n                    tempArr.push(<p  className=\"indented\"><b className=\"I\">[ls]</b>: list all files</p>);\n                    tempArr.push(<p  className=\"indented\"><b className=\"I\">[run argument]</b>: run a specific program</p>);\n                    tempArr.push(<p  className=\"indented\"><b className=\"I\">[close argument]</b>: close a specific  program or file</p>);\n                    tempArr.push(<p  className=\"indented\"><b className=\"I\">[open argument]</b>: open a specific document<br/>⠀</p>);\n                }\n                else{ \n                    tempArr.push(<p>Unknown Argument: {commandSelector[1]}<br/>⠀</p>);                   \n                }\n                \n                break;\n            }\n\n            case \"ls\":{\n                if(commandSelector.length <= 1){\n                    tempArr.push(<p  className=\"indented\">File: aboutMe</p>);\n                    tempArr.push(<p  className=\"indented\">File: experience</p>);\n                    tempArr.push(<p  className=\"indented\">File: work</p>);\n                }\n                else{ \n                    tempArr.push(<p>Unknown Argument: {commandSelector[1]}<br/>⠀</p>);                   \n                }\n                break;\n            }\n\n            case \"1\":{\n                getTerLine.Value = \"aditya@d:~$ open aboutMe\";\n                return parseCommand(\"open aboutMe\")\n            }\n\n            case \"2\":{\n                getTerLine.Value = \"aditya@d:~$ open experience\";\n                return parseCommand(\"open experience\")\n             }\n\n             case \"3\":{\n                getTerLine.Value = \"aditya@d:~$ open work\";\n                return parseCommand(\"open work\")\n             }\n\n             case \"4\":{\n                getTerLine.Value = \"aditya@d:~$ run contactMe\";\n                return parseCommand(\"open contactMe\")\n             }\n\n            case \"open\":{\n\n                if(commandSelector.length <= 1)\n                    tempArr.push(<p>Error Expected Argument open [argument]<br/>⠀</p>);\n\n                else{ \n                    switch(commandSelector[1]){\n                        case \"aboutMe\":{\n                            if(props.addTab(\"About\"))\n                                tempArr.push(<p>Opening File: {commandSelector[1]} ...<br/>⠀</p>);\n                            else\n                                tempArr.push(<p>File {commandSelector[1]} is already open redirecting...<br/>⠀</p>);\n                            \n                            break;\n                        }\n\n                        case \"experience\":{\n                            if(props.addTab(\"Experience\"))\n                                tempArr.push(<p>Opening File: {commandSelector[1]} ...<br/>⠀</p>);\n                            else\n                                tempArr.push(<p>File {commandSelector[1]} is already open redirecting...<br/>⠀</p>);\n                            \n                            break;\n                        }\n\n                        case \"work\":{\n                            if(props.addTab(\"Work\"))\n                                tempArr.push(<p>Opening File: {commandSelector[1]} ...<br/>⠀</p>);\n                            else\n                                tempArr.push(<p>File {commandSelector[1]} is already open redirecting...<br/>⠀</p>);\n                            \n                            break;\n                        }\n\n                        case \"contactMe\":{\n                            if(props.addTab(\"Contact\"))\n                                tempArr.push(<p>Opening File: {commandSelector[1]} ...<br/>⠀</p>);\n                            else\n                                tempArr.push(<p>File {commandSelector[1]} is already open redirecting...<br/>⠀</p>);\n                            \n                            break;\n                        }\n\n                        case \"terminal\":{\n                            if(props.addTab(\"Terminal\"))\n                                tempArr.push(<p>Opening new {commandSelector[1]} tab ...<br/>⠀</p>);\n                            else\n                                tempArr.push(<p>File {commandSelector[1]} is already open redirecting...<br/>⠀</p>);\n                            \n                            break;\n                        }\n\n                        default:{\n                            tempArr.push(<p>Couldn't Find file: {commandSelector[1]}<br/>⠀</p>);\n                            break;\n                        }\n                    }\n\n                                       \n                }\n                break;\n            }\n\n            case \"close\":{\n                let argument = commandSelector[1];\n\n                if(commandSelector.length <= 1)\n                    tempArr.push(<p>Error Expected Argument close [argument]<br/>⠀</p>);\n\n                else{ \n\n                    switch(argument){\n                        case \"aboutMe\":{\n                            if(props.removeTab(\"About\"))\n                                tempArr.push(<p>aboutMe has been closed<br/>⠀</p>);\n                            else\n                                tempArr.push(<p>aboutMe is not open<br/>⠀</p>);\n                            break;\n                        }\n\n                        case \"experience\":{\n                            if(props.removeTab(\"Experience\"))\n                                tempArr.push(<p>experience has been closed<br/>⠀</p>);\n                            else\n                                tempArr.push(<p>experence is not open<br/>⠀</p>);\n                            break;\n                        }\n\n                        case \"work\":{\n                            if(props.removeTab(\"Work\"))\n                                tempArr.push(<p>work has been closed<br/>⠀</p>);\n                            else\n                                tempArr.push(<p>work is not open<br/>⠀</p>);\n                            break;\n                        }\n\n                        case \"contactMe\":{\n                            if(props.removeTab(\"Terminal\"))\n                                tempArr.push(<p>contactMe has been closed<br/>⠀</p>);\n                            else\n                                tempArr.push(<p>contactMe is not open<br/>⠀</p>);\n                            break;\n                        }\n\n                        case \"terminal\":{\n                            if(props.removeTab(\"Terminal\"))\n                                tempArr.push(<p>Terminal has been closed<br/>⠀</p>);\n                            else\n                                tempArr.push(<p>New Terminal Tab is not open<br/>⠀</p>);\n                            break;\n                        }\n\n                        default:{\n                            tempArr.push(<p>{argument} does not exist<br/>⠀</p>);\n                        }\n                    }\n                    \n                }\n                break;\n            }\n\n            default:\n                tempArr.push(<p>{parseString()} is not a recognized command</p>);\n                tempArr.push(<p>Type \"help\" for list of commands<br/>⠀</p>);                \n                break;\n        }\n\n        setContent({arr:tempArr});\n    }\n\n\n   \n\n\n    return (\n        <div className={props.display + \" main\"}>\n            {allTerminalText}\n            <form onSubmit={updateContent}>\n                <input id=\"command-line\" type=\"text\" autoFocus spellCheck=\"false\" autoComplete=\"off\" value={getTerLine.Value} onChange={updateTerminalLine}/>     \n                <p>⠀</p>  \n            </form>\n        </div>     \n    );\n})\nexport default Terminal;"]},"metadata":{},"sourceType":"module"}
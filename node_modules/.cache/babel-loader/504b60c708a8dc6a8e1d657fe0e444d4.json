{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Iliyan\\\\Documents\\\\GitHub\\\\PortfolioWebsite\\\\Front-End\\\\src\\\\Containers\\\\Terminal\\\\Terminal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './Terminal.css';\n\nconst Terminal = props => {\n  _s();\n\n  const [getTerLine, setTerLine] = useState({\n    Value: \"Iliyan Dimitrov:■\",\n    blink: true\n  });\n  console.log(\"Started Refresh\");\n  let changed = false;\n  let intervalID = setTimeout(() => {\n    if (!changed) {\n      if (getTerLine.blink) {\n        //console.log(\"Blink is true and Value is \" + getTerLine.Value);\n        setTerLine({\n          Value: (getTerLine.Value + \"\").replace(\"■\", \"\"),\n          blink: !getTerLine.blink\n        });\n      } else {\n        // console.log(\"Blink is false and Value is \" + getTerLine.Value);\n        setTerLine({\n          Value: getTerLine.Value + \"■\",\n          blink: !getTerLine.blink\n        });\n      }\n    }\n  }, 1000);\n\n  const updateTerminalLine = e => {\n    //setTerLine(\"Iliyan Dimitrov:\"  + e.target.value.substring(16));\n    changed = true;\n    setTerLine({\n      Value: \"Iliyan Dimitrov:\" + e.target.value.substring(16),\n      blink: getTerLine.blink\n    });\n    changed = false;\n    console.log(e.target.value.length);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This is a terminal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"interactive Portfolio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"command-line\",\n      type: \"text\",\n      spellCheck: \"false\",\n      value: getTerLine.Value,\n      onChange: updateTerminalLine\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Terminal, \"EZbe83FxEWle+Hqb6kZwtkbfVdE=\");\n\n_c = Terminal;\nexport default Terminal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Terminal\");","map":{"version":3,"sources":["C:/Users/Iliyan/Documents/GitHub/PortfolioWebsite/Front-End/src/Containers/Terminal/Terminal.js"],"names":["React","useEffect","useState","Terminal","props","getTerLine","setTerLine","Value","blink","console","log","changed","intervalID","setTimeout","replace","updateTerminalLine","e","target","value","substring","length"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAO,gBAAP;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,UAAD,EAAYC,UAAZ,IAA0BJ,QAAQ,CAAC;AAACK,IAAAA,KAAK,EAAC,mBAAP;AAA2BC,IAAAA,KAAK,EAAC;AAAjC,GAAD,CAAxC;AACIC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,MAAIC,OAAO,GAAG,KAAd;AACA,MAAIC,UAAU,GAAGC,UAAU,CAAC,MAAK;AAC7B,QAAG,CAACF,OAAJ,EAAY;AACR,UAAGN,UAAU,CAACG,KAAd,EAAoB;AAChB;AACAF,QAAAA,UAAU,CAAC;AAACC,UAAAA,KAAK,EAAC,CAACF,UAAU,CAACE,KAAX,GAAmB,EAApB,EAAwBO,OAAxB,CAAgC,GAAhC,EAAoC,EAApC,CAAP;AAA+CN,UAAAA,KAAK,EAAC,CAACH,UAAU,CAACG;AAAjE,SAAD,CAAV;AACH,OAHD,MAII;AACD;AACCF,QAAAA,UAAU,CAAC;AAACC,UAAAA,KAAK,EAAEF,UAAU,CAACE,KAAX,GAAoB,GAA5B;AAAiCC,UAAAA,KAAK,EAAC,CAACH,UAAU,CAACG;AAAnD,SAAD,CAAV;AACH;AACJ;AACJ,GAX0B,EAWzB,IAXyB,CAA3B;;AAcJ,QAAMO,kBAAkB,GAAIC,CAAD,IAAM;AAC7B;AACAL,IAAAA,OAAO,GAAG,IAAV;AACAL,IAAAA,UAAU,CAAC;AAACC,MAAAA,KAAK,EAAE,qBAAsBS,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,SAAf,CAAyB,EAAzB,CAA9B;AAA4DX,MAAAA,KAAK,EAACH,UAAU,CAACG;AAA7E,KAAD,CAAV;AACAG,IAAAA,OAAO,GAAG,KAAV;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYM,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeE,MAA3B;AACH,GAND;;AAUA,sBACI;AAAM,IAAA,EAAE,EAAC,MAAT;AAAA,4BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAO,MAAA,EAAE,EAAC,cAAV;AAAyB,MAAA,IAAI,EAAC,MAA9B;AAAqC,MAAA,UAAU,EAAC,OAAhD;AAAwD,MAAA,KAAK,EAAEf,UAAU,CAACE,KAA1E;AAAiF,MAAA,QAAQ,EAAEQ;AAA3F;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CArCD;;GAAMZ,Q;;KAAAA,Q;AAsCN,eAAeA,QAAf","sourcesContent":["import React, {useEffect , useState} from 'react';\r\nimport './Terminal.css'\r\nconst Terminal = (props) => {\r\n    const [getTerLine,setTerLine] = useState({Value:\"Iliyan Dimitrov:■\",blink:true});\r\n        console.log(\"Started Refresh\");\r\n        let changed = false;\r\n        let intervalID = setTimeout(() =>{\r\n            if(!changed){\r\n                if(getTerLine.blink){\r\n                    //console.log(\"Blink is true and Value is \" + getTerLine.Value);\r\n                    setTerLine({Value:(getTerLine.Value + \"\").replace(\"■\",\"\"),blink:!getTerLine.blink});\r\n                }\r\n                else{\r\n                   // console.log(\"Blink is false and Value is \" + getTerLine.Value);\r\n                    setTerLine({Value: getTerLine.Value + (\"■\"),blink:!getTerLine.blink});\r\n                }\r\n            }\r\n        },1000);\r\n\r\n\r\n    const updateTerminalLine = (e) =>{\r\n        //setTerLine(\"Iliyan Dimitrov:\"  + e.target.value.substring(16));\r\n        changed = true;\r\n        setTerLine({Value:(\"Iliyan Dimitrov:\"  + e.target.value.substring(16)),blink:getTerLine.blink});\r\n        changed = false;\r\n        console.log(e.target.value.length);\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div  id=\"main\">\r\n\r\n            <h1>This is a terminal</h1>\r\n            <p>interactive Portfolio</p>\r\n            <input id=\"command-line\" type=\"text\" spellCheck=\"false\" value={getTerLine.Value} onChange={updateTerminalLine}/>       \r\n        </div>\r\n        \r\n    );\r\n}\r\nexport default Terminal;"]},"metadata":{},"sourceType":"module"}
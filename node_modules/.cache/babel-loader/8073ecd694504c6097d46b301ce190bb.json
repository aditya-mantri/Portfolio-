{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Iliyan\\\\Documents\\\\GitHub\\\\PortfolioWebsite\\\\Front-End\\\\src\\\\Containers\\\\Terminal\\\\Terminal.js\",\n    _s = $RefreshSig$();\n\nimport React, { PureComponent, useState } from 'react';\nimport './Terminal.css';\n\nconst Terminal = props => {\n  _s();\n\n  const [getTerLine, setTerLine] = useState({\n    Value: \"Iliyan Dimitrov:■\",\n    blink: false\n  });\n\n  const updateTerminalLine = e => {\n    setTerLine(\"Iliyan Dimitrov:\" + e.target.value.substring(16).replace(\"■\", \"\") + \"■\");\n    setTerLine({\n      Value: \"Iliyan Dimitrov:\" + e.target.value.substring(16).replace(\"■\", \"\") + \"■\",\n      blink: getTerLine.blink\n    });\n    console.log(e.target.value.length);\n  };\n\n  var intervalID = setInterval(() => {\n    if (getTerLine.blink) setTerLine({\n      Value: getTerLine.Value.replace(\"■\", \"\"),\n      blink: !getTerLine.blink\n    });else setTerLine(getTerLine.append(\"■\"));\n  }, 500);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This is a terminal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"interactive Portfolio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"command-line\",\n      type: \"text\",\n      spellcheck: \"false\",\n      value: getTerLine.Value,\n      onChange: updateTerminalLine\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Terminal, \"svrevimUR++fmjnM2tCwMsfyI3o=\");\n\n_c = Terminal;\nexport default Terminal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Terminal\");","map":{"version":3,"sources":["C:/Users/Iliyan/Documents/GitHub/PortfolioWebsite/Front-End/src/Containers/Terminal/Terminal.js"],"names":["React","PureComponent","useState","Terminal","props","getTerLine","setTerLine","Value","blink","updateTerminalLine","e","target","value","substring","replace","console","log","length","intervalID","setInterval","append"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA+BC,QAA/B,QAA8C,OAA9C;AACA,OAAO,gBAAP;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,UAAD,EAAYC,UAAZ,IAA0BJ,QAAQ,CAAC;AAACK,IAAAA,KAAK,EAAC,mBAAP;AAA2BC,IAAAA,KAAK,EAAC;AAAjC,GAAD,CAAxC;;AAEA,QAAMC,kBAAkB,GAAIC,CAAD,IAAM;AAC7BJ,IAAAA,UAAU,CAAC,qBAAsBI,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,SAAf,CAAyB,EAAzB,EAA6BC,OAA7B,CAAqC,GAArC,EAAyC,EAAzC,CAAtB,GAAqE,GAAtE,CAAV;AACAR,IAAAA,UAAU,CAAC;AAACC,MAAAA,KAAK,EAAE,qBAAsBG,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,SAAf,CAAyB,EAAzB,EAA6BC,OAA7B,CAAqC,GAArC,EAAyC,EAAzC,CAAtB,GAAqE,GAA7E;AAAkFN,MAAAA,KAAK,EAACH,UAAU,CAACG;AAAnG,KAAD,CAAV;AAEAO,IAAAA,OAAO,CAACC,GAAR,CAAYN,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeK,MAA3B;AACH,GALD;;AAOA,MAAIC,UAAU,GAAGC,WAAW,CAAC,MAAK;AAC9B,QAAGd,UAAU,CAACG,KAAd,EACIF,UAAU,CAAC;AAACC,MAAAA,KAAK,EAACF,UAAU,CAACE,KAAX,CAAiBO,OAAjB,CAAyB,GAAzB,EAA6B,EAA7B,CAAP;AAAwCN,MAAAA,KAAK,EAAC,CAACH,UAAU,CAACG;AAA1D,KAAD,CAAV,CADJ,KAGIF,UAAU,CAACD,UAAU,CAACe,MAAX,CAAkB,GAAlB,CAAD,CAAV;AACP,GAL2B,EAKzB,GALyB,CAA5B;AAOA,sBACI;AAAM,IAAA,EAAE,EAAC,MAAT;AAAA,4BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAO,MAAA,EAAE,EAAC,cAAV;AAAyB,MAAA,IAAI,EAAC,MAA9B;AAAqC,MAAA,UAAU,EAAC,OAAhD;AAAwD,MAAA,KAAK,EAAEf,UAAU,CAACE,KAA1E;AAAiF,MAAA,QAAQ,EAAEE;AAA3F;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA1BD;;GAAMN,Q;;KAAAA,Q;AA2BN,eAAeA,QAAf","sourcesContent":["import React, {PureComponent , useState} from 'react';\r\nimport './Terminal.css'\r\nconst Terminal = (props) => {\r\n    const [getTerLine,setTerLine] = useState({Value:\"Iliyan Dimitrov:■\",blink:false});\r\n\r\n    const updateTerminalLine = (e) =>{\r\n        setTerLine(\"Iliyan Dimitrov:\"  + e.target.value.substring(16).replace(\"■\",\"\") + \"■\");\r\n        setTerLine({Value:(\"Iliyan Dimitrov:\"  + e.target.value.substring(16).replace(\"■\",\"\") + \"■\"),blink:getTerLine.blink});\r\n\r\n        console.log(e.target.value.length);\r\n    }\r\n\r\n    var intervalID = setInterval(() =>{\r\n        if(getTerLine.blink)\r\n            setTerLine({Value:getTerLine.Value.replace(\"■\",\"\"),blink:!getTerLine.blink});\r\n        else\r\n            setTerLine(getTerLine.append(\"■\"));\r\n    }, 500);\r\n\r\n    return (\r\n        <div  id=\"main\">\r\n\r\n            <h1>This is a terminal</h1>\r\n            <p>interactive Portfolio</p>\r\n            <input id=\"command-line\" type=\"text\" spellcheck=\"false\" value={getTerLine.Value} onChange={updateTerminalLine}/>       \r\n        </div>\r\n        \r\n    );\r\n}\r\nexport default Terminal;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Iliyan\\\\Documents\\\\GitHub\\\\PortfolioWebsite\\\\Front-End\\\\src\\\\Containers\\\\Terminal\\\\Terminal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment, useEffect, forwardRef, useImperativeHandle } from 'react';\nimport './Terminal.css';\nconst Terminal = /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const [getTerLine, setTerLine] = useState({\n    Value: \"iliyan@dimitrov:~$ ▮\",\n    blink: true\n  });\n  useImperativeHandle(ref, () => ({\n    sendCommand(command) {\n      clearTimeout(timeoutID);\n      getTerLine.Value = \"iliyan@dimitrov:~$ \" + command;\n      updateContent();\n    }\n\n  }));\n\n  const N = () => {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 39\n      }, this), \"\\u2800\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 29\n    }, this);\n  };\n\n  const starterArr = [/*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Iliyan Dimitrov\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: [\"This is a Fully Interactive Portfolio Page with a Linux Insprired Terminal\", N()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"To Use the Portfolio Either \", /*#__PURE__*/_jsxDEV(\"u\", {\n      className: \"attention\",\n      children: \"Use the Navigation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 41\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Or \", /*#__PURE__*/_jsxDEV(\"u\", {\n      className: \"attention\",\n      children: \"Explore the Terminal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this), N()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"To Begin, Type:\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"\\u2800\\u2800\\u2800\\u2800\\u2800\\u2800\\u2800\", /*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"I\",\n      children: \"[1]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 20\n    }, this), \" or \", /*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"I\",\n      children: \"[open aboutMe]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 48\n    }, this), \": Opens about me\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"\\u2800\\u2800\\u2800\\u2800\\u2800\\u2800\\u2800\", /*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"I\",\n      children: \"[2]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 20\n    }, this), \" or \", /*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"I\",\n      children: \"[open experience]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 48\n    }, this), \": Opens my previous work experience\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"\\u2800\\u2800\\u2800\\u2800\\u2800\\u2800\\u2800\", /*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"I\",\n      children: \"[3]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 20\n    }, this), \" or \", /*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"I\",\n      children: \"[open work]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 48\n    }, this), \": Opens previous projects on GitHub\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"\\u2800\\u2800\\u2800\\u2800\\u2800\\u2800\\u2800\", /*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"I\",\n      children: \"[4]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 20\n    }, this), \" or \", /*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"I\",\n      children: \"[run contactMe]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 48\n    }, this), \": Runs contact me program in terminal\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"\\u2800\\u2800\\u2800\\u2800\\u2800\\u2800\\u2800\", /*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"I\",\n      children: \"[5]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 20\n    }, this), \" or \", /*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"I\",\n      children: \"[run snakeGame]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 48\n    }, this), \": Runs the terminal snake game\", N()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this)];\n  let [content, setContent] = useState({\n    arr: starterArr\n  });\n  useEffect(() => {\n    let element = document.getElementById(\"command-line\");\n\n    if (element !== null) {\n      element.scrollIntoView();\n    }\n  }, [content.arr]);\n\n  const updateTerminalLine = e => {\n    clearTimeout(timeoutID);\n    setTerLine({\n      Value: \"iliyan@dimitrov:~$ \" + parseString(e.target.value),\n      blink: true\n    });\n  };\n\n  const updateContent = e => {\n    if (e !== undefined) e.preventDefault();\n    clearTimeout(timeoutID);\n    parseCommand(parseString());\n    setTerLine({\n      Value: \"iliyan@dimitrov:~$ \",\n      blink: true\n    });\n  };\n\n  const parseString = input => {\n    let bufferIndex = 19;\n    if (input !== undefined) return input.substring(bufferIndex).replaceAll(\"▮\", \"\");else return getTerLine.Value.substring(bufferIndex).replaceAll(\"▮\", \"\");\n  };\n\n  let timeoutID = setTimeout(() => {\n    if (getTerLine.blink) setTerLine({\n      Value: (getTerLine.Value + \"\").replaceAll(\"▮\", \"\"),\n      blink: !getTerLine.blink\n    });else setTerLine({\n      Value: getTerLine.Value + \"▮\",\n      blink: !getTerLine.blink\n    });\n  }, 800);\n  props.setTimeoutId(timeoutID);\n  let num = 0;\n\n  const allTerminalText = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"css-typing\",\n    children: content.arr.map(item => {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: item\n      }, num++, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n\n  let element = document.getElementById(\"command-line\");\n\n  if (element !== null) {\n    if (element !== document.activeElement) element.focus();\n  }\n\n  const parseCommand = command => {\n    clearTimeout(timeoutID); //console.log(\"Entered Parse\");\n\n    let commandSelector = command.split(\" \");\n    let tempArr = [...content.arr];\n    tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"iliyan@dimitrov:~$ \", parseString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 22\n    }, this));\n\n    switch (commandSelector[0]) {\n      case \"\":\n        {\n          tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"iliyan@dimitrov:~$ \", parseString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 30\n          }, this));\n          break;\n        }\n\n      case \"clear\":\n        {\n          if (commandSelector.length <= 1) {\n            setContent({\n              arr: starterArr\n            });\n            return null;\n          } else {\n            tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"iliyan@dimitrov:~$ \", parseString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 34\n            }, this));\n            tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Unknown Argument: \", commandSelector[1], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 75\n              }, this), \"\\u2800\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 34\n            }, this));\n          }\n\n          break;\n        }\n\n      case \"help\":\n        {\n          if (commandSelector.length <= 1) {\n            tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u2800\\u2800\\u2800\\u2800\\u2800\\u2800\\u2800clear: clears command window\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 34\n            }, this));\n            tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u2800\\u2800\\u2800\\u2800\\u2800\\u2800\\u2800ls: list all files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 34\n            }, this));\n            tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u2800\\u2800\\u2800\\u2800\\u2800\\u2800\\u2800run [argument]: run a specific program\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 34\n            }, this));\n            tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u2800\\u2800\\u2800\\u2800\\u2800\\u2800\\u2800open [argument]: open a specific document\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 85\n              }, this), \"\\u2800\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 34\n            }, this));\n          } else {\n            tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Unknown Argument: \", commandSelector[1], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 75\n              }, this), \"\\u2800\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 34\n            }, this));\n          }\n\n          break;\n        }\n\n      case \"ls\":\n        {\n          if (commandSelector.length <= 1) {\n            tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u2800\\u2800\\u2800\\u2800\\u2800\\u2800\\u2800File: aboutMe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 34\n            }, this));\n            tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u2800\\u2800\\u2800\\u2800\\u2800\\u2800\\u2800File: experience\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 34\n            }, this));\n            tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u2800\\u2800\\u2800\\u2800\\u2800\\u2800\\u2800File: work\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 34\n            }, this));\n            tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u2800\\u2800\\u2800\\u2800\\u2800\\u2800\\u2800Program: snakeGame\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 62\n              }, this), \"\\u2800\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 34\n            }, this));\n          } else {\n            tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Unknown Argument: \", commandSelector[1], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 75\n              }, this), \"\\u2800\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 34\n            }, this));\n          }\n\n          break;\n        }\n\n      case \"1\":\n        {\n          getTerLine.Value = \"iliyan@dimitrov:~$ open aboutMe\";\n          return parseCommand(\"open aboutMe\");\n        }\n\n      case \"2\":\n        {\n          getTerLine.Value = \"iliyan@dimitrov:~$ open experience\";\n          return parseCommand(\"open experience\");\n        }\n\n      case \"3\":\n        {\n          getTerLine.Value = \"iliyan@dimitrov:~$ open work\";\n          return parseCommand(\"open work\");\n        }\n\n      case \"4\":\n        {\n          getTerLine.Value = \"iliyan@dimitrov:~$ run contactMe\";\n          return parseCommand(\"run contactMe\");\n        }\n\n      case \"5\":\n        {\n          getTerLine.Value = \"iliyan@dimitrov:~$ run snakeGame\";\n          return parseCommand(\"run snakeGame\");\n        }\n\n      case \"run\":\n        {\n          if (commandSelector.length <= 1) tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Error Expected Argument run [argument]\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 75\n            }, this), \"\\u2800\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 34\n          }, this));else {\n            tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Running Program: \", commandSelector[1], \" ...\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 78\n              }, this), \"\\u2800\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 34\n            }, this));\n          }\n          break;\n        }\n\n      case \"open\":\n        {\n          if (commandSelector.length <= 1) tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Error Expected Argument open [argument]\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 76\n            }, this), \"\\u2800\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 34\n          }, this));else {\n            switch (commandSelector[1]) {\n              case \"aboutMe\":\n                {\n                  if (props.addTab(\"About\")) tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Opening File: \", commandSelector[1], \" ...\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 87\n                    }, this), \"\\u2800\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 46\n                  }, this));else tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"File \", commandSelector[1], \" is already open\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 90\n                    }, this), \"\\u2800\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 46\n                  }, this));\n                  break;\n                }\n\n              case \"experience\":\n                {\n                  if (props.addTab(\"Experience\")) tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Opening File: \", commandSelector[1], \" ...\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 87\n                    }, this), \"\\u2800\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 46\n                  }, this));else tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"File \", commandSelector[1], \" is already open\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 211,\n                      columnNumber: 90\n                    }, this), \"\\u2800\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 46\n                  }, this));\n                  break;\n                }\n\n              case \"work\":\n                {\n                  if (props.addTab(\"Work\")) tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Opening File: \", commandSelector[1], \" ...\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 87\n                    }, this), \"\\u2800\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 46\n                  }, this));else tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"File \", commandSelector[1], \" is already open\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 90\n                    }, this), \"\\u2800\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 46\n                  }, this));\n                  break;\n                }\n\n              default:\n                {\n                  tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Couldn't Find file: \", commandSelector[1], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 85\n                    }, this), \"\\u2800\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 42\n                  }, this));\n                  break;\n                }\n            }\n          }\n          break;\n        }\n\n      case \"close\":\n        {\n          if (commandSelector.length <= 1) tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Error Expected Argument close [argument]\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 77\n            }, this), \"\\u2800\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 34\n          }, this));else {}\n          break;\n        }\n\n      default:\n        tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [parseString(), \" is not a recognized command\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 30\n        }, this));\n        tempArr.push( /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Type \\\"help\\\" for list of commands\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 65\n          }, this), \"\\u2800\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 30\n        }, this));\n        break;\n    }\n\n    setContent({\n      arr: tempArr\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"main\",\n    children: [allTerminalText, /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateContent,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"command-line\",\n        type: \"text\",\n        autoFocus: true,\n        spellCheck: \"false\",\n        autoComplete: \"off\",\n        value: getTerLine.Value,\n        onChange: updateTerminalLine\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u2800\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 9\n  }, this);\n}, \"dT5iA3zoMLKkJ/SxUE1RHXCWsIs=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c2 = Terminal;\nexport default Terminal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Terminal$forwardRef\");\n$RefreshReg$(_c2, \"Terminal\");","map":{"version":3,"sources":["C:/Users/Iliyan/Documents/GitHub/PortfolioWebsite/Front-End/src/Containers/Terminal/Terminal.js"],"names":["React","useState","Fragment","useEffect","forwardRef","useImperativeHandle","Terminal","props","ref","getTerLine","setTerLine","Value","blink","sendCommand","command","clearTimeout","timeoutID","updateContent","N","starterArr","content","setContent","arr","element","document","getElementById","scrollIntoView","updateTerminalLine","e","parseString","target","value","undefined","preventDefault","parseCommand","input","bufferIndex","substring","replaceAll","setTimeout","setTimeoutId","num","allTerminalText","map","item","activeElement","focus","commandSelector","split","tempArr","push","length","addTab"],"mappings":"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","sourcesContent":["import React, {useState, Fragment, useEffect, forwardRef, useImperativeHandle } from 'react';\r\nimport './Terminal.css'\r\nconst Terminal = forwardRef((props, ref) => {\r\n    const [getTerLine,setTerLine] = useState({Value:\"iliyan@dimitrov:~$ ▮\",blink:true});\r\n\r\n\r\n    useImperativeHandle(\r\n        ref,\r\n        () => ({\r\n            sendCommand(command) {\r\n                clearTimeout(timeoutID);\r\n                getTerLine.Value = \"iliyan@dimitrov:~$ \" + command;\r\n                updateContent();\r\n            }\r\n         }),\r\n     )\r\n\r\n\r\n    const N = () =>{return (<Fragment><br/>⠀</Fragment>);}\r\n\r\n    const starterArr = [\r\n        (<h2>Iliyan Dimitrov</h2>),\r\n        (<h3>This is a Fully Interactive Portfolio Page with a Linux Insprired Terminal{N()}</h3>),\r\n\r\n        (<p>To Use the Portfolio Either <u className=\"attention\">Use the Navigation</u></p>),\r\n        (<p>Or <u className=\"attention\">Explore the Terminal</u>{N()}</p>),\r\n\r\n        (<p>To Begin, Type:</p>),\r\n        (<p>⠀⠀⠀⠀⠀⠀⠀<b className=\"I\">[1]</b> or <b className=\"I\">[open aboutMe]</b>: Opens about me</p>),\r\n        (<p>⠀⠀⠀⠀⠀⠀⠀<b className=\"I\">[2]</b> or <b className=\"I\">[open experience]</b>: Opens my previous work experience</p>),\r\n        (<p>⠀⠀⠀⠀⠀⠀⠀<b className=\"I\">[3]</b> or <b className=\"I\">[open work]</b>: Opens previous projects on GitHub</p>),\r\n        (<p>⠀⠀⠀⠀⠀⠀⠀<b className=\"I\">[4]</b> or <b className=\"I\">[run contactMe]</b>: Runs contact me program in terminal</p>),\r\n        (<p>⠀⠀⠀⠀⠀⠀⠀<b className=\"I\">[5]</b> or <b className=\"I\">[run snakeGame]</b>: Runs the terminal snake game{N()}</p>)\r\n    ]\r\n    let[content,setContent] = useState({\r\n        arr:starterArr\r\n    });\r\n    useEffect(()=>{\r\n        let element = document.getElementById(\"command-line\")\r\n        if(element !== null){\r\n            element.scrollIntoView();\r\n        }\r\n    },[content.arr])\r\n\r\n\r\n    const updateTerminalLine = (e) =>{\r\n        clearTimeout(timeoutID);\r\n    \r\n        setTerLine({Value:(\"iliyan@dimitrov:~$ \"  + parseString(e.target.value)),blink:true});\r\n    }\r\n\r\n\r\n    const updateContent =(e) =>{\r\n        if(e !== undefined)\r\n            e.preventDefault();\r\n\r\n        clearTimeout(timeoutID);\r\n        \r\n        parseCommand(parseString());\r\n\r\n        setTerLine({Value:\"iliyan@dimitrov:~$ \",blink:true});\r\n    }\r\n\r\n\r\n    const parseString = (input)=>{\r\n        \r\n        let bufferIndex = 19;\r\n        if(input !== undefined)\r\n            return input.substring(bufferIndex).replaceAll(\"▮\",\"\");\r\n        else\r\n            return getTerLine.Value.substring(bufferIndex).replaceAll(\"▮\",\"\");\r\n    }\r\n\r\n\r\n    let timeoutID = setTimeout(() =>{\r\n        if(getTerLine.blink)\r\n            setTerLine({Value:(getTerLine.Value + \"\").replaceAll(\"▮\",\"\"),blink:!getTerLine.blink});\r\n        \r\n        else\r\n            setTerLine({Value: getTerLine.Value + (\"▮\"),blink:!getTerLine.blink});\r\n        \r\n    },800);\r\n    props.setTimeoutId(timeoutID);\r\n\r\n\r\n    let num = 0;\r\n    const allTerminalText = (       \r\n        <div className=\"css-typing\">           \r\n            {content.arr.map((item)=>{\r\n                return <Fragment key={num++}>{item}</Fragment>;\r\n            })}\r\n        </div>\r\n    )\r\n\r\n\r\n    let element = document.getElementById(\"command-line\")\r\n    if(element !== null){\r\n        if(element !== document.activeElement)\r\n            element.focus();\r\n    }\r\n\r\n \r\n    const parseCommand = (command) =>{\r\n        clearTimeout(timeoutID);\r\n\r\n        //console.log(\"Entered Parse\");\r\n        let commandSelector = command.split(\" \")\r\n\r\n        let tempArr = [...content.arr];\r\n        tempArr.push(<p>iliyan@dimitrov:~$ {parseString()}</p>);\r\n\r\n        switch(commandSelector[0]){\r\n            case \"\":{\r\n                tempArr.push(<p>iliyan@dimitrov:~$ {parseString()}</p>);\r\n                break;\r\n            }\r\n\r\n            case \"clear\":{\r\n                if(commandSelector.length <= 1){\r\n                    setContent({arr:starterArr});\r\n                    return null;\r\n                }\r\n                else{\r\n                    tempArr.push(<p>iliyan@dimitrov:~$ {parseString()}</p>);\r\n                    tempArr.push(<p>Unknown Argument: {commandSelector[1]}<br/>⠀</p>);\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"help\":{\r\n                if(commandSelector.length <= 1){\r\n                    tempArr.push(<p>⠀⠀⠀⠀⠀⠀⠀clear: clears command window</p>);\r\n                    tempArr.push(<p>⠀⠀⠀⠀⠀⠀⠀ls: list all files</p>);\r\n                    tempArr.push(<p>⠀⠀⠀⠀⠀⠀⠀run [argument]: run a specific program</p>);\r\n                    tempArr.push(<p>⠀⠀⠀⠀⠀⠀⠀open [argument]: open a specific document<br/>⠀</p>);\r\n                }\r\n                else{ \r\n                    tempArr.push(<p>Unknown Argument: {commandSelector[1]}<br/>⠀</p>);                   \r\n                }\r\n                \r\n                break;\r\n            }\r\n\r\n            case \"ls\":{\r\n                if(commandSelector.length <= 1){\r\n                    tempArr.push(<p>⠀⠀⠀⠀⠀⠀⠀File: aboutMe</p>);\r\n                    tempArr.push(<p>⠀⠀⠀⠀⠀⠀⠀File: experience</p>);\r\n                    tempArr.push(<p>⠀⠀⠀⠀⠀⠀⠀File: work</p>);\r\n                    tempArr.push(<p>⠀⠀⠀⠀⠀⠀⠀Program: snakeGame<br/>⠀</p>);\r\n                }\r\n                else{ \r\n                    tempArr.push(<p>Unknown Argument: {commandSelector[1]}<br/>⠀</p>);                   \r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"1\":{\r\n                getTerLine.Value = \"iliyan@dimitrov:~$ open aboutMe\";\r\n                return parseCommand(\"open aboutMe\")\r\n            }\r\n\r\n            case \"2\":{\r\n                getTerLine.Value = \"iliyan@dimitrov:~$ open experience\";\r\n                return parseCommand(\"open experience\")\r\n             }\r\n\r\n             case \"3\":{\r\n                getTerLine.Value = \"iliyan@dimitrov:~$ open work\";\r\n                return parseCommand(\"open work\")\r\n             }\r\n\r\n             case \"4\":{\r\n                getTerLine.Value = \"iliyan@dimitrov:~$ run contactMe\";\r\n                return parseCommand(\"run contactMe\")\r\n             }\r\n\r\n             case \"5\":{\r\n                getTerLine.Value = \"iliyan@dimitrov:~$ run snakeGame\";\r\n                return parseCommand(\"run snakeGame\")\r\n             }\r\n            case \"run\":{\r\n                if(commandSelector.length <= 1)\r\n                    tempArr.push(<p>Error Expected Argument run [argument]<br/>⠀</p>);\r\n\r\n                else{ \r\n                    tempArr.push(<p>Running Program: {commandSelector[1]} ...<br/>⠀</p>);                   \r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"open\":{\r\n\r\n                if(commandSelector.length <= 1)\r\n                    tempArr.push(<p>Error Expected Argument open [argument]<br/>⠀</p>);\r\n\r\n                else{ \r\n                    switch(commandSelector[1]){\r\n                        case \"aboutMe\":{\r\n                            if(props.addTab(\"About\"))\r\n                                tempArr.push(<p>Opening File: {commandSelector[1]} ...<br/>⠀</p>);\r\n                            else\r\n                                tempArr.push(<p>File {commandSelector[1]} is already open<br/>⠀</p>);\r\n                            \r\n                            break;\r\n                        }\r\n\r\n                        case \"experience\":{\r\n                            if(props.addTab(\"Experience\"))\r\n                                tempArr.push(<p>Opening File: {commandSelector[1]} ...<br/>⠀</p>);\r\n                            else\r\n                                tempArr.push(<p>File {commandSelector[1]} is already open<br/>⠀</p>);\r\n                            \r\n                            break;\r\n                        }\r\n\r\n                        case \"work\":{\r\n                            if(props.addTab(\"Work\"))\r\n                                tempArr.push(<p>Opening File: {commandSelector[1]} ...<br/>⠀</p>);\r\n                            else\r\n                                tempArr.push(<p>File {commandSelector[1]} is already open<br/>⠀</p>);\r\n                            \r\n                            break;\r\n                        }\r\n\r\n                        default:{\r\n                            tempArr.push(<p>Couldn't Find file: {commandSelector[1]}<br/>⠀</p>);\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                                       \r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"close\":{\r\n                if(commandSelector.length <= 1)\r\n                    tempArr.push(<p>Error Expected Argument close [argument]<br/>⠀</p>);\r\n\r\n                else{ \r\n\r\n                }\r\n                break;\r\n            }\r\n\r\n            default:\r\n                tempArr.push(<p>{parseString()} is not a recognized command</p>);\r\n                tempArr.push(<p>Type \"help\" for list of commands<br/>⠀</p>);                \r\n                break;\r\n        }\r\n\r\n        setContent({arr:tempArr});\r\n    }\r\n\r\n\r\n   \r\n\r\n\r\n    return (\r\n        <div id=\"main\">\r\n            {allTerminalText}\r\n            <form onSubmit={updateContent}>\r\n                <input id=\"command-line\" type=\"text\"  autoFocus spellCheck=\"false\" autoComplete=\"off\" value={getTerLine.Value} onChange={updateTerminalLine}/>     \r\n                <p>⠀</p>  \r\n            </form>\r\n        </div>\r\n        \r\n    );\r\n\r\n    \r\n})\r\nexport default Terminal;"]},"metadata":{},"sourceType":"module"}